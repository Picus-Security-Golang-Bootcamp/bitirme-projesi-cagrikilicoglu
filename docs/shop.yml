swagger: "2.0"
info:
  description: "This is a sample shopping server.  "
  version: "1.0.0"
  title: "Swagger Shopping-Cart"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "mcagrikilicoglu@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
basePath: "/api/v1/shopping-cart-api"
tags:
  - name: "products"
    description: "Everything about Products"

schemes:
  - "https"
  - "http"

paths:
  /products:
    get:
      summary: "Get all the products in the store"
      description: ""
      operationId: "getProducts"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Products in the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        "405":
          description: "Invalid input"
  /products/create:
    post:
      tags:
        - "product"
      summary: "Add a new procut to the store"
      description: ""
      operationId: "addProduct"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Product object that needs to be added to the store"
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "201":
          description: "successful create operation"
          schema:
            $ref: "#/definitions/Product"
        "405":
          description: "Invalid input"
  /signup:
    get:
      tags:
        - "user"
      summary: "Register user into the system"
      description: ""
      operationId: "signupUser"
      produces:
        # - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "user object that needs to be registered in to the store"
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "201":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid input"
  /login:
    post:
      tags:
        - "user"
      summary: "Logs user into the system"
      description: ""
      operationId: "loginUser"
      produces:
        # - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "user object that needs to be logged in to the store"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
          headers:
            X-Rate-Limit:
              type: "integer"
              format: "int32"
              description: "calls per hour allowed by the user"
            X-Expires-After:
              type: "string"
              format: "date-time"
              description: "date in UTC when token expires"
        "400":
          description: "Invalid username/password supplied"

definitions:
  Product:
    type: "object"
    required:
      - "id"
      - "name"
      - "price"
      - "stock"
      - "categoryName"
    properties:
      id:
        type: "integer"
        format: "uint32"
      name:
        type: "string"
      price:
        type: "number"
        format: "float"
      stock:
        type: "object"
        $ref: "#/definitions/Stock"
      categoryName:
        type: "string"
  Stock:
    type: "object"
    required:
      - "sku"
      - "number"
      - "status"
    properties:
      sku:
        type: "string"
      number:
        type: "integer"
        format: "uint32"
      status:
        type: "string"
  User:
    type: "object"
    required:
      - "email"
      - "password"
      - "firstName"
      - "lastName"
      - "zipCode"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      zipCode:
        type: "string"
  Login:
    type: "object"
    required:
      - "email"
      - "password"
    properties:
      email:
        type: "string"
      password:
        type: "string"
